- name: "Check vars"
  hosts: elastic_hosts
  tasks:
    - name: "Check heap values"
      debug: msg="Master {{ master_heap }} Data {{ data_heap }} Coord {{ coord_heap }}"
- name: "Read hosts generated by digital ocean playbook"
  hosts: localhost
  vars:
    nh: "{{ lookup('file', 'hosts') }}"
  tasks:
    - name: "See what we got"
      debug: var=nh
    - name: "Set fact"
      set_fact:
        net_hosts: "{{ nh }}"
  
- name: "Deploy cluster hosts to nodes"
  hosts: elastic_hosts
  gather_facts: no
  vars:
    net_hosts: "{{ hostvars['localhost']['net_hosts'] }}"
  tasks:
    - name: "Write to nodes"
      lineinfile:
        path: /etc/hosts
        regexp: '.*{{ net_hosts }}$'
        line: "{{ net_hosts }}"
 #     with_items: "{{ net_hosts }}"
    - name: "breakpoint"
      meta: end_play
  
- name: "Deploy Elastic Master Nodes"
  hosts: elastic_masters
  roles:
    - role: elastic.elasticsearch
  vars:
    masterlist: "{{ lookup('inventory_hostnames', 'elastic_masters') }}"
    es_heap_size: "{{ master_heap }}"
    es_config:
      cluster.name: "{{ clustername }}"
      network.host: 0
      cluster.initial_master_nodes: "{{ masterlist }}"
      discovery.seed_hosts: "{{ masterlist }}"
      http.port: 9200
      node.data: false
      node.master: true
      node.ingest: false
      node.ml: false
      cluster.remote.connect: false
      bootstrap.memory_lock: true
#
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.transport.ssl.key: "security/{{ inventory_hostname }}.key"
      xpack.security.transport.ssl.certificate_authorities: [ "security/ca.crt" ]
#
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.verification_mode: certificate
      xpack.security.http.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.http.ssl.key: "security/{{ inventory_hostname }}.key"
      xpack.security.http.ssl.certificate_authorities: [ "security/ca.crt" ]
- name: "Deploy Elastic Data Nodes"
  hosts: elastic_data
  roles:
    - role: elastic.elasticsearch
  vars:
    masterlist: "{{ lookup('inventory_hostnames', 'elastic_masters') }}"
    es_data_dirs:
      - "/var/lib/elasticsearch"
    es_heap_size: "{{ data_heap }}"
    es_config:
      cluster.name: "{{ clustername }}"
      network.host: 0
      discovery.seed_hosts: "{{ masterlist }}"
      http.port: 9200
      node.data: true
      node.master: false
      node.ml: false
      bootstrap.memory_lock: true
      indices.recovery.max_bytes_per_sec: 100mb
#
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.transport.ssl.key: "security/{{ inventory_hostname }}.key"
#
      xpack.security.http.ssl.key: "security/{{ inventory_hostname }}.key"
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.http.ssl.certificate_authorities: [ "security/ca.crt" ]
      xpack.security.http.ssl.verification_mode: certificate

- name: "Deploy Elastic Coordinator Nodes"
  hosts: elastic_coordinators
  roles:
    - role: elastic.elasticsearch
  vars:
    masterlist: "{{ lookup('inventory_hostnames', 'elastic_masters') }}"
    es_heap_size: "{{ coord_heap }}"
    es_config:
      cluster.name: "{{ clustername }}"
      network.host: 0
      discovery.seed_hosts: "{{ masterlist }}"
      http.port: 9200
      node.data: false
      node.master: false
      node.ingest: false
      node.ml: false
      cluster.remote.connect: false
      bootstrap.memory_lock: true
#
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.transport.ssl.key: "security/{{ inventory_hostname }}.key"
#
      xpack.security.http.ssl.key: "security/{{ inventory_hostname }}.key"
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.certificate: "security/{{ inventory_hostname }}.crt"
      xpack.security.http.ssl.certificate_authorities: [ "security/ca.crt" ]
      xpack.security.http.ssl.verification_mode: certificate
